.env_setting: &env_setting
  name: version env setting
  script: |
    echo "CNB_BRANCH: ${CNB_BRANCH}"
    VERSION="${CNB_BRANCH#v}"
    MAJOR=$(echo "$VERSION" | cut -d'.' -f1)
    MINOR=$(echo "$VERSION" | cut -d'.' -f2)
    PATCH=$(echo "$VERSION" | cut -d'.' -f3)
    echo "##[set-output version=$VERSION]"
    echo "##[set-output major=$MAJOR]"
    echo "##[set-output minor=$MINOR]"
    echo "##[set-output patch=$PATCH]"
  exports:
    version: VERSION
    major: MAJOR
    minor: MINOR
    patch: PATCH

.env_testing: &env_testing
  name: version env testing
  script: |
    echo "VERSION: ${VERSION}"
    echo "MAJOR: ${MAJOR}"
    echo "MINOR: ${MINOR}"
    echo "PATCH: ${PATCH}"

.build_docker: &build_docker
  # 声明式的构建环境 https://docs.cnb.cool/
  # 可以去dockerhub上 https://hub.docker.com/_/maven 找到您需要maven和jdk版本
  image: maven:3.9-eclipse-temurin-17
  volumes:
    # 声明式的构建缓存 https://docs.cnb.cool/zh/grammar/pipeline.html#volumes
    - /root/.m2:copy-on-write

.build_jobs: &build_jobs
  - <<: *env_setting
  - <<: *env_testing
  - name: mvn package
    script:
      - mvn -B clean package -Dmaven.test.skip=true -Dmaven.javadoc.skip=true
  - name: docker login
    script: docker login -u ${CNB_TOKEN_USER_NAME} -p "${CNB_TOKEN}" ${CNB_DOCKER_REGISTRY}
  - name: docker build
    script: docker buildx build --push -t ${IMAGE_NAME}:latest-linux-${PLATFORM} -t ${IMAGE_NAME}:${VERSION}-linux-${PLATFORM} -t ${IMAGE_NAME}:${MAJOR}-linux-${PLATFORM} -t ${IMAGE_NAME}:${MAJOR}.${MINOR}-linux-${PLATFORM} .
  - name: resolve
    type: cnb:resolve
    options:
      key: build-${PLATFORM}

.manifest_job: &manifest_job
  - name: manifest
    image: cnbcool/manifest
    settings:
      target: ${IMAGE_NAME}:${VERSION_NAME}
      template: ${IMAGE_NAME}:${VERSION_NAME}-OS-ARCH
      platforms:
        - linux/amd64
        - linux/arm64

.remove_tag_job: &remove_tag_job
  - name: remove tag
    type: artifact:remove-tag
    options:
      name: ${CNB_REPO_NAME}
      tags:
        - ${VERSION_NAME}-linux-amd64
        - ${VERSION_NAME}-linux-arm64
      type: docker

# 分支名
v*:
  tag_push:
    - runner:
        tags: cnb:arch:amd64
      docker: *build_docker
      services:
        - docker
      env:
        IMAGE_NAME: ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}
        PLATFORM: amd64
      stages: *build_jobs

    - runner:
        tags: cnb:arch:arm64:v8
      docker: *build_docker
      services:
        - docker
      env:
        IMAGE_NAME: ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}
        PLATFORM: arm64
      stages: *build_jobs

    - services:
        - docker
      env:
        IMAGE_NAME: ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}
      stages:
        - name: await the amd64
          type: cnb:await
          options:
            key: build-amd64
        - name: await the arm64
          type: cnb:await
          options:
            key: build-arm64
        - <<: *env_setting
        - <<: *env_testing
        - name: manifest version
          env:
            VERSION_NAME: ${VERSION}
          jobs:
            - <<: *manifest_job
            - <<: *remove_tag_job
        - name: manifest major.minor
          env:
            VERSION_NAME: ${MAJOR}.${MINOR}
          jobs:
            - <<: *manifest_job
            - <<: *remove_tag_job
        - name: manifest major
          env:
            VERSION_NAME: ${MAJOR}
          jobs:
            - <<: *manifest_job
            - <<: *remove_tag_job
        - name: manifest latest
          env:
            VERSION_NAME: latest
          jobs:
            - <<: *manifest_job
            - <<: *remove_tag_job
